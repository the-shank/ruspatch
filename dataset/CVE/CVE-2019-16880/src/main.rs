// Proof-of-concept of several double-free vulnerabilities (CVE-2018-20996, CVE-2019-16880, CVE-2019-16144, CVE-2019-16881)
// Not very similar to those real CVEs but should be enough for illustration purpose

pub struct Foo {
    pub s: String,
}

impl Drop for Foo {
    fn drop(&mut self) {
        println!("Dropping: {:?}", self.s);
    }
}

pub fn fun1() -> Foo {
    let mut src = String::from("string");
    let foo = fun2(&mut src);
    foo
}

pub fn fun2(src: &mut String) -> Foo {
    let s = unsafe { string2raw(src.as_mut_ptr(), src.len(), 32) };
    Foo { s: s }
}
unsafe fn string2raw(ptr: *mut u8, len: usize, cap: usize) -> String {
    let s1 = String::from_raw_parts(ptr, len, cap);
    s1
}
pub fn main() {
    let _foo = fun1();
}
