#[no_mangle]
fn mock_encode_size_buggy(bytes_len: usize) -> usize {
    let rem = bytes_len % 3;

    let complete_input_chunks = bytes_len / 3;
    let complete_output_chars = complete_input_chunks * 4;
    let printing_output_chars = if rem == 0 {
        complete_output_chars
    } else {
        complete_output_chars + 4
    };
    let line_ending_output_chars = printing_output_chars * 2;

    return printing_output_chars + line_ending_output_chars;
}
#[no_mangle]
fn mock_encoded_size_patch(bytes_len: usize) -> Option<usize> {
    let printing_output_chars = bytes_len
        .checked_add(2)
        .map(|x| x / 3)
        .and_then(|x| x.checked_mul(4));

    let line_ending_output_chars = printing_output_chars.and_then(|y| y.checked_mul(2));

    printing_output_chars.and_then(|x|
        line_ending_output_chars.and_then(|y| x.checked_add(y)))
}
